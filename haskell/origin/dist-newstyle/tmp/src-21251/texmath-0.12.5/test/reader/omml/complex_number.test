<<< omml
<?xml version="1.0" encoding="UTF-8"?>
<m:oMathPara>
  <m:oMathParaPr>
    <m:jc m:val="center" />
  </m:oMathParaPr>
  <m:oMath>
    <m:r>
      <m:rPr>
        <m:sty m:val="p" />
      </m:rPr>
      <m:t>c</m:t>
    </m:r>
    <m:r>
      <m:rPr>
        <m:sty m:val="p" />
      </m:rPr>
      <m:t>=</m:t>
    </m:r>
    <m:limUpp>
      <m:e>
        <m:acc>
          <m:accPr>
            <m:chr m:val="︷" />
          </m:accPr>
          <m:e>
            <m:limLow>
              <m:e>
                <m:limLow>
                  <m:e>
                    <m:r>
                      <m:rPr>
                        <m:sty m:val="p" />
                      </m:rPr>
                      <m:t>a</m:t>
                    </m:r>
                  </m:e>
                  <m:lim>
                    <m:r>
                      <m:rPr>
                        <m:sty m:val="p" />
                      </m:rPr>
                      <m:t>︸</m:t>
                    </m:r>
                  </m:lim>
                </m:limLow>
              </m:e>
              <m:lim>
                <m:r>
                  <m:rPr>
                    <m:sty m:val="p" />
                  </m:rPr>
                  <m:t>real</m:t>
                </m:r>
              </m:lim>
            </m:limLow>
            <m:r>
              <m:rPr>
                <m:sty m:val="p" />
              </m:rPr>
              <m:t>+</m:t>
            </m:r>
            <m:limLow>
              <m:e>
                <m:limLow>
                  <m:e>
                    <m:r>
                      <m:rPr>
                        <m:sty m:val="p" />
                      </m:rPr>
                      <m:t>b</m:t>
                    </m:r>
                    <m:r>
                      <m:rPr>
                        <m:sty m:val="p" />
                      </m:rPr>
                      <m:t>i</m:t>
                    </m:r>
                  </m:e>
                  <m:lim>
                    <m:r>
                      <m:rPr>
                        <m:sty m:val="p" />
                      </m:rPr>
                      <m:t>︸</m:t>
                    </m:r>
                  </m:lim>
                </m:limLow>
              </m:e>
              <m:lim>
                <m:r>
                  <m:rPr>
                    <m:sty m:val="p" />
                  </m:rPr>
                  <m:t>imaginary</m:t>
                </m:r>
              </m:lim>
            </m:limLow>
          </m:e>
        </m:acc>
      </m:e>
      <m:lim>
        <m:r>
          <m:rPr>
            <m:sty m:val="p" />
          </m:rPr>
          <m:t>complex number</m:t>
        </m:r>
      </m:lim>
    </m:limUpp>
  </m:oMath>
</m:oMathPara>

>>> native
[ EIdentifier "c"
, ESymbol Rel "="
, EOver
    True
    (EOver
       False
       (EGrouped
          [ EUnder
              True
              (EUnder True (EIdentifier "a") (ESymbol Ord "\65080"))
              (EGrouped
                 [ EIdentifier "r"
                 , EIdentifier "e"
                 , EIdentifier "a"
                 , EIdentifier "l"
                 ])
          , ESymbol Bin "+"
          , EUnder
              True
              (EUnder
                 True
                 (EGrouped [ EIdentifier "b" , EIdentifier "i" ])
                 (ESymbol Ord "\65080"))
              (EGrouped
                 [ EIdentifier "i"
                 , EIdentifier "m"
                 , EIdentifier "a"
                 , EIdentifier "g"
                 , EIdentifier "i"
                 , EIdentifier "n"
                 , EIdentifier "a"
                 , EIdentifier "r"
                 , EIdentifier "y"
                 ])
          ])
       (ESymbol Accent "\65079"))
    (EGrouped
       [ EIdentifier "c"
       , EIdentifier "o"
       , EIdentifier "m"
       , EIdentifier "p"
       , EIdentifier "l"
       , EIdentifier "e"
       , EIdentifier "x"
       , ESpace (2 % 9)
       , EIdentifier "n"
       , EIdentifier "u"
       , EIdentifier "m"
       , EIdentifier "b"
       , EIdentifier "e"
       , EIdentifier "r"
       ])
]
